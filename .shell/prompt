prompt_git(){
    local s='';
    local branchName='';

    # Check if the current directory is in a git repository
    git rev-parse --is-inside-work-tree &>/dev/null || return;

    # If is is a git repository
    # Check for what branch we're on
    # Get the short symbolic ref. If HEAD isn't a symbolic ref, get a
    #+tracking remote branch or tag. Otherwise get the
    #+short SHA for the latest commit, or give up
    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
                git describe --all --exact-match HEAD 2> /dev/null || \
                git rev-parse --short HEAD 2> /dev/null || \
                echo '(unknown)')";

    # Early exit for Chromium & Blink repo, as the dirty check takes too long
    # Thanks, @paulirish!
	# https://github.com/paulirish/dotfiles/blob/dd33151f/.bash_prompt#L110-L123
	repoUrl="$(git config --get remote.origin.url)";
	if grep -q 'chromium/src.git' <<< "${repoUrl}"; then
		s+='*';
	else
		# Check for uncommitted changes in the index.
		if ! $(git diff --quiet --ignore-submodules --cached); then
			s+='+';
		fi;
		# Check for unstaged changes.
		if ! $(git diff-files --quiet --ignore-submodules --); then
			s+='!';
		fi;
		# Check for untracked files.
		if [ -n "$(git ls-files --others --exclude-standard)" ]; then
			s+='?';
		fi;
		# Check for stashed files.
		if $(git rev-parse --verify refs/stash &>/dev/null); then
			s+='$';
		fi;
	fi;

    [ -n "${s}" ] && s=" [${s}]";

    echo -e "${1}${branchName}${2}${s}";
}


# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
    userStyle="${red}";
else
    userStyle="${cyan}";
fi;

# Hight light the host name when connected via SSH
if [[ "${SSH_TTY}" ]]; then
    hostStyle="${red}";
else
    hostStyle="${yellow}";
fi;

# Set terminal title and prompt
PS1="\[${bold}\]\[${userStyle}\]\u%n";        # username
PS1+="\[${reset}\] at ";
PS1+="\[${bold}\]\[${hostStyle}\]\h";       # hostname
PS1+="\[${reset}\] in ";
PS1+="\[${bold}\]\[${green}\]\w";           # working directory full path
# git repository details
PS1+="\$(prompt_git \"\[${reset}\] on \[${bold}\]\[${blue}\]\" \"\[${lcyan}\]\")";
PS1+="\[${reset}\]\[${bold}\]\n \$ \[${reset}\]";
export PS1;

PS2="\[${yellow}\] â†’ \[${reset}\]";
export PS2;

PROMPT_COMMAND='export PROMPT_COMMAND=echo'
